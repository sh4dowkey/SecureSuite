name: Build cross-platform artifacts

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") { pip install -r requirements.txt }
          pip install pyinstaller

      - name: Install dependencies (Linux / macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pyinstaller

      - name: Build with PyInstaller (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          pyinstaller --onedir --noconsole `
            --name SecureSuite `
            --distpath release `
            --icon=assets/logo.ico `
            --add-data "assets;assets" `
            main.py
          Get-ChildItem -Path release

      - name: Build with PyInstaller (Linux / macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          pyinstaller --onedir --noconsole \
            --name SecureSuite \
            --distpath release \
            --icon=assets/logo.icns \
            --add-data "assets:assets" \
            main.py
          ls -la release || true

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: SecureSuite-${{ matrix.os }}
          path: release/**
