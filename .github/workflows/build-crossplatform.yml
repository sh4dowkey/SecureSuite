name: Build cross-platform releases

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Give GITHUB_TOKEN write permissions for contents so release creation works
permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.11]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") { pip install -r requirements.txt }
          pip install pyinstaller

      - name: Install dependencies (Linux / macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pyinstaller

      - name: Build with PyInstaller (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          pyinstaller --onefile --name SecureSuite --distpath release main.py
          Get-ChildItem -Path release

      - name: Build with PyInstaller (Linux / macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          pyinstaller --onefile --name SecureSuite --distpath release main.py
          ls -la release || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: SecureSuite-${{ matrix.os }}
          path: release/**

  publish_release:
    name: Publish GitHub Release (collects build artifacts)
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Ubuntu artifact
        uses: actions/download-artifact@v4
        with:
          name: SecureSuite-ubuntu-latest
          path: artifacts/ubuntu || true

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: SecureSuite-windows-latest
          path: artifacts/windows || true

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: SecureSuite-macos-latest
          path: artifacts/macos || true

      - name: Collect built binaries
        run: |
          mkdir -p final_release
          find artifacts -type f -name "SecureSuite*" -exec cp {} final_release/ \; || true
          ls -la final_release

      - name: Create GitHub Release and upload assets
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}
          release_name: SecureSuite v${{ github.run_number }}
          body: Automated build by GitHub Actions run ${{ github.run_id }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: final_release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
